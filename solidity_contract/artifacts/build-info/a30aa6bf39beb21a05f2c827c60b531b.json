{
	"id": "a30aa6bf39beb21a05f2c827c60b531b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"cryptowill.sol": {
				"content": "pragma solidity 0.5.17;\r\n\r\ncontract Counter {\r\n\r\n    event ValueChanged(uint oldValue, uint256 newValue);\r\n\r\n    // Private variable of type unsigned int to keep the number of counts\r\n    uint256 private count = 0;\r\n\r\n    // Function that increments our counter\r\n    function increment() public {\r\n        count += 1;\r\n        emit ValueChanged(count - 1, count);\r\n    }\r\n\r\n    // Getter to get the count value\r\n    function getCount() public view returns (uint256) {\r\n        return count;\r\n    }\r\n\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"cryptowill.sol": {
				"Counter": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "oldValue",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newValue",
									"type": "uint256"
								}
							],
							"name": "ValueChanged",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "increment",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"cryptowill.sol\":27:502  contract Counter {\r... */\n  mstore(0x40, 0x80)\n    /* \"cryptowill.sol\":212:213  0 */\n  0x00\n    /* \"cryptowill.sol\":188:213  uint256 private count = 0 */\n  dup1\n  sstore\n    /* \"cryptowill.sol\":27:502  contract Counter {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"cryptowill.sol\":27:502  contract Counter {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"cryptowill.sol\":27:502  contract Counter {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"cryptowill.sol\":27:502  contract Counter {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa87d942c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd09de08a\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"cryptowill.sol\":416:497  function getCount() public view returns (uint256) {\r... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"cryptowill.sol\":267:370  function increment() public {\r... */\n    tag_4:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"cryptowill.sol\":416:497  function getCount() public view returns (uint256) {\r... */\n    tag_6:\n        /* \"cryptowill.sol\":457:464  uint256 */\n      0x00\n        /* \"cryptowill.sol\":484:489  count */\n      dup1\n      sload\n        /* \"cryptowill.sol\":477:489  return count */\n      swap1\n      pop\n        /* \"cryptowill.sol\":416:497  function getCount() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"cryptowill.sol\":267:370  function increment() public {\r... */\n    tag_8:\n        /* \"cryptowill.sol\":315:316  1 */\n      0x01\n        /* \"cryptowill.sol\":306:311  count */\n      0x00\n      dup1\n        /* \"cryptowill.sol\":306:316  count += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"cryptowill.sol\":332:362  ValueChanged(count - 1, count) */\n      0x2db947ef788961acc438340dbcb4e242f80d026b621b7c98ee30619950390382\n        /* \"cryptowill.sol\":353:354  1 */\n      0x01\n        /* \"cryptowill.sol\":345:350  count */\n      sload(0x00)\n        /* \"cryptowill.sol\":345:354  count - 1 */\n      sub\n        /* \"cryptowill.sol\":356:361  count */\n      sload(0x00)\n        /* \"cryptowill.sol\":332:362  ValueChanged(count - 1, count) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"cryptowill.sol\":267:370  function increment() public {\r... */\n      jump\t// out\n\n    auxdata: 0xa265627a7a7231582005c9a4db798758a064e98db58e0187333481cb88ef0751daf883935c2d8dc41764736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405260008055348015601357600080fd5b5060f1806100226000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c8063a87d942c146037578063d09de08a146053575b600080fd5b603d605b565b6040518082815260200191505060405180910390f35b60596064565b005b60008054905090565b600160008082825401925050819055507f2db947ef788961acc438340dbcb4e242f80d026b621b7c98ee30619950390382600160005403600054604051808381526020018281526020019250505060405180910390a156fea265627a7a7231582005c9a4db798758a064e98db58e0187333481cb88ef0751daf883935c2d8dc41764736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SSTORE CALLVALUE DUP1 ISZERO PUSH1 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF1 DUP1 PUSH2 0x22 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA87D942C EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH1 0x53 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x59 PUSH1 0x64 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x2DB947EF788961ACC438340DBCB4E242F80D026B621B7C98EE30619950390382 PUSH1 0x1 PUSH1 0x0 SLOAD SUB PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SDIV 0xC9 LOG4 0xDB PUSH26 0x8758A064E98DB58E0187333481CB88EF0751DAF883935C2D8DC4 OR PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "27:475:0:-;;;212:1;188:25;;27:475;8:9:-1;5:2;;;30:1;27;20:12;5:2;27:475:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060325760003560e01c8063a87d942c146037578063d09de08a146053575b600080fd5b603d605b565b6040518082815260200191505060405180910390f35b60596064565b005b60008054905090565b600160008082825401925050819055507f2db947ef788961acc438340dbcb4e242f80d026b621b7c98ee30619950390382600160005403600054604051808381526020018281526020019250505060405180910390a156fea265627a7a7231582005c9a4db798758a064e98db58e0187333481cb88ef0751daf883935c2d8dc41764736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA87D942C EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH1 0x53 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x59 PUSH1 0x64 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x2DB947EF788961ACC438340DBCB4E242F80D026B621B7C98EE30619950390382 PUSH1 0x1 PUSH1 0x0 SLOAD SUB PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SDIV 0xC9 LOG4 0xDB PUSH26 0x8758A064E98DB58E0187333481CB88EF0751DAF883935C2D8DC4 OR PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "27:475:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;27:475:0;;;;;;;;;;;;;;;;;;;;;;;;416:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;267:103;;;:::i;:::-;;416:81;457:7;484:5;;477:12;;416:81;:::o;267:103::-;315:1;306:5;;:10;;;;;;;;;;;332:30;353:1;345:5;;:9;356:5;;332:30;;;;;;;;;;;;;;;;;;;;;;;;267:103::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "48200",
								"executionCost": "5105",
								"totalCost": "53305"
							},
							"external": {
								"getCount()": "991",
								"increment()": "23929"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 502,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 27,
									"end": 502,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 27,
									"end": 502,
									"name": "MSTORE"
								},
								{
									"begin": 212,
									"end": 213,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 188,
									"end": 213,
									"name": "DUP1"
								},
								{
									"begin": 188,
									"end": 213,
									"name": "SSTORE"
								},
								{
									"begin": 27,
									"end": 502,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 27,
									"end": 502,
									"name": "POP"
								},
								{
									"begin": 27,
									"end": 502,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 502,
									"name": "DUP1"
								},
								{
									"begin": 27,
									"end": 502,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 502,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 502,
									"name": "CODECOPY"
								},
								{
									"begin": 27,
									"end": 502,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 502,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582005c9a4db798758a064e98db58e0187333481cb88ef0751daf883935c2d8dc41764736f6c63430005110032",
									".code": [
										{
											"begin": 27,
											"end": 502,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 27,
											"end": 502,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27,
											"end": 502,
											"name": "MSTORE"
										},
										{
											"begin": 27,
											"end": 502,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 27,
											"end": 502,
											"name": "POP"
										},
										{
											"begin": 27,
											"end": 502,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 27,
											"end": 502,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 27,
											"end": 502,
											"name": "LT"
										},
										{
											"begin": 27,
											"end": 502,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 27,
											"end": 502,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 502,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 502,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 27,
											"end": 502,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 27,
											"end": 502,
											"name": "SHR"
										},
										{
											"begin": 27,
											"end": 502,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 502,
											"name": "PUSH",
											"value": "A87D942C"
										},
										{
											"begin": 27,
											"end": 502,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 502,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 27,
											"end": 502,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 502,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 502,
											"name": "PUSH",
											"value": "D09DE08A"
										},
										{
											"begin": 27,
											"end": 502,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 502,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 27,
											"end": 502,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 502,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 27,
											"end": 502,
											"name": "JUMPDEST"
										},
										{
											"begin": 27,
											"end": 502,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 502,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 502,
											"name": "REVERT"
										},
										{
											"begin": 416,
											"end": 497,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 416,
											"end": 497,
											"name": "JUMPDEST"
										},
										{
											"begin": 416,
											"end": 497,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 416,
											"end": 497,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 416,
											"end": 497,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 416,
											"end": 497,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 416,
											"end": 497,
											"name": "JUMPDEST"
										},
										{
											"begin": 416,
											"end": 497,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 416,
											"end": 497,
											"name": "MLOAD"
										},
										{
											"begin": 416,
											"end": 497,
											"name": "DUP1"
										},
										{
											"begin": 416,
											"end": 497,
											"name": "DUP3"
										},
										{
											"begin": 416,
											"end": 497,
											"name": "DUP2"
										},
										{
											"begin": 416,
											"end": 497,
											"name": "MSTORE"
										},
										{
											"begin": 416,
											"end": 497,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 416,
											"end": 497,
											"name": "ADD"
										},
										{
											"begin": 416,
											"end": 497,
											"name": "SWAP2"
										},
										{
											"begin": 416,
											"end": 497,
											"name": "POP"
										},
										{
											"begin": 416,
											"end": 497,
											"name": "POP"
										},
										{
											"begin": 416,
											"end": 497,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 416,
											"end": 497,
											"name": "MLOAD"
										},
										{
											"begin": 416,
											"end": 497,
											"name": "DUP1"
										},
										{
											"begin": 416,
											"end": 497,
											"name": "SWAP2"
										},
										{
											"begin": 416,
											"end": 497,
											"name": "SUB"
										},
										{
											"begin": 416,
											"end": 497,
											"name": "SWAP1"
										},
										{
											"begin": 416,
											"end": 497,
											"name": "RETURN"
										},
										{
											"begin": 267,
											"end": 370,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 267,
											"end": 370,
											"name": "JUMPDEST"
										},
										{
											"begin": 267,
											"end": 370,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 267,
											"end": 370,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 267,
											"end": 370,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 267,
											"end": 370,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 267,
											"end": 370,
											"name": "JUMPDEST"
										},
										{
											"begin": 267,
											"end": 370,
											"name": "STOP"
										},
										{
											"begin": 416,
											"end": 497,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 416,
											"end": 497,
											"name": "JUMPDEST"
										},
										{
											"begin": 457,
											"end": 464,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 484,
											"end": 489,
											"name": "DUP1"
										},
										{
											"begin": 484,
											"end": 489,
											"name": "SLOAD"
										},
										{
											"begin": 477,
											"end": 489,
											"name": "SWAP1"
										},
										{
											"begin": 477,
											"end": 489,
											"name": "POP"
										},
										{
											"begin": 416,
											"end": 497,
											"name": "SWAP1"
										},
										{
											"begin": 416,
											"end": 497,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 267,
											"end": 370,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 267,
											"end": 370,
											"name": "JUMPDEST"
										},
										{
											"begin": 315,
											"end": 316,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 306,
											"end": 311,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 306,
											"end": 311,
											"name": "DUP1"
										},
										{
											"begin": 306,
											"end": 316,
											"name": "DUP3"
										},
										{
											"begin": 306,
											"end": 316,
											"name": "DUP3"
										},
										{
											"begin": 306,
											"end": 316,
											"name": "SLOAD"
										},
										{
											"begin": 306,
											"end": 316,
											"name": "ADD"
										},
										{
											"begin": 306,
											"end": 316,
											"name": "SWAP3"
										},
										{
											"begin": 306,
											"end": 316,
											"name": "POP"
										},
										{
											"begin": 306,
											"end": 316,
											"name": "POP"
										},
										{
											"begin": 306,
											"end": 316,
											"name": "DUP2"
										},
										{
											"begin": 306,
											"end": 316,
											"name": "SWAP1"
										},
										{
											"begin": 306,
											"end": 316,
											"name": "SSTORE"
										},
										{
											"begin": 306,
											"end": 316,
											"name": "POP"
										},
										{
											"begin": 332,
											"end": 362,
											"name": "PUSH",
											"value": "2DB947EF788961ACC438340DBCB4E242F80D026B621B7C98EE30619950390382"
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 345,
											"end": 350,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 345,
											"end": 350,
											"name": "SLOAD"
										},
										{
											"begin": 345,
											"end": 354,
											"name": "SUB"
										},
										{
											"begin": 356,
											"end": 361,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 356,
											"end": 361,
											"name": "SLOAD"
										},
										{
											"begin": 332,
											"end": 362,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 332,
											"end": 362,
											"name": "MLOAD"
										},
										{
											"begin": 332,
											"end": 362,
											"name": "DUP1"
										},
										{
											"begin": 332,
											"end": 362,
											"name": "DUP4"
										},
										{
											"begin": 332,
											"end": 362,
											"name": "DUP2"
										},
										{
											"begin": 332,
											"end": 362,
											"name": "MSTORE"
										},
										{
											"begin": 332,
											"end": 362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 332,
											"end": 362,
											"name": "ADD"
										},
										{
											"begin": 332,
											"end": 362,
											"name": "DUP3"
										},
										{
											"begin": 332,
											"end": 362,
											"name": "DUP2"
										},
										{
											"begin": 332,
											"end": 362,
											"name": "MSTORE"
										},
										{
											"begin": 332,
											"end": 362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 332,
											"end": 362,
											"name": "ADD"
										},
										{
											"begin": 332,
											"end": 362,
											"name": "SWAP3"
										},
										{
											"begin": 332,
											"end": 362,
											"name": "POP"
										},
										{
											"begin": 332,
											"end": 362,
											"name": "POP"
										},
										{
											"begin": 332,
											"end": 362,
											"name": "POP"
										},
										{
											"begin": 332,
											"end": 362,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 332,
											"end": 362,
											"name": "MLOAD"
										},
										{
											"begin": 332,
											"end": 362,
											"name": "DUP1"
										},
										{
											"begin": 332,
											"end": 362,
											"name": "SWAP2"
										},
										{
											"begin": 332,
											"end": 362,
											"name": "SUB"
										},
										{
											"begin": 332,
											"end": 362,
											"name": "SWAP1"
										},
										{
											"begin": 332,
											"end": 362,
											"name": "LOG1"
										},
										{
											"begin": 267,
											"end": 370,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getCount()": "a87d942c",
							"increment()": "d09de08a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"ValueChanged\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"increment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"cryptowill.sol\":\"Counter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"cryptowill.sol\":{\"keccak256\":\"0x1ab1e1c5f87769a91d3974e07bd554d6708124489e74b7c62cde2e09b33f01a4\",\"urls\":[\"bzz-raw://b33cadd8e80621ff9d856b927245595138173e721b5084aa930d220f9f5f887e\",\"dweb:/ipfs/QmcJfroqqHMWh3LYv1zAZXWEzwvgJSkicjS6UYRiBxL5KR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "cryptowill.sol:Counter",
								"label": "count",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"cryptowill.sol": {
				"ast": {
					"absolutePath": "cryptowill.sol",
					"exportedSymbols": {
						"Counter": [
							34
						]
					},
					"id": 35,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.5",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 34,
							"linearizedBaseContracts": [
								34
							],
							"name": "Counter",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 7,
									"name": "ValueChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"indexed": false,
												"name": "oldValue",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "72:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "72:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"indexed": false,
												"name": "newValue",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "87:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "87:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "71:33:0"
									},
									"src": "53:52:0"
								},
								{
									"constant": false,
									"id": 10,
									"name": "count",
									"nodeType": "VariableDeclaration",
									"scope": 34,
									"src": "188:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "188:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 9,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "212:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "295:75:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 13,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "306:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "315:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "306:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "306:10:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 18,
																"name": "count",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "345:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 19,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "353:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "345:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 21,
															"name": "count",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "356:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 17,
														"name": "ValueChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "332:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "332:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "EmitStatement",
												"src": "327:35:0"
											}
										]
									},
									"documentation": null,
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "285:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "295:0:0"
									},
									"scope": 34,
									"src": "267:103:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 32,
										"nodeType": "Block",
										"src": "466:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 30,
													"name": "count",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "484:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 29,
												"id": 31,
												"nodeType": "Return",
												"src": "477:12:0"
											}
										]
									},
									"documentation": null,
									"id": 33,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "433:2:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "457:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "456:9:0"
									},
									"scope": 34,
									"src": "416:81:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 35,
							"src": "27:475:0"
						}
					],
					"src": "0:504:0"
				},
				"id": 0
			}
		}
	}
}